.TH RAWDOG 1
.SH NAME
rawdog \- an RSS Aggregator Without Delusions Of Grandeur
.SH SYNOPSIS
.B rawdog
.RI [ options ]
.SH DESCRIPTION
\fBrawdog\fP is a feed aggregator for Unix-like systems.
.PP
\fBrawdog\fP uses the Python \fBfeedparser\fP module to retrieve
articles from a number of feeds in RSS, Atom and other formats, and
writes out a single HTML file, based on a template either provided by
the user or generated by \fBrawdog\fP, containing the latest articles
it's seen.
.PP
\fBrawdog\fP uses the ETags and Last-Modified headers to avoid fetching
a file that hasn't changed, and supports gzip and delta compression to
reduce bandwidth when it has.
\fBrawdog\fP is configured from a simple text file; the only state kept
between invocations that can't be reconstructed from the feeds is the
ordering of articles.
.SH OPTIONS
This program follows the usual GNU command line syntax, with long
options starting with two dashes (`\-').
.SS General Options
.TP
\fB\-d\fP \fIDIR\fP, \fB\-\-dir\fP \fIDIR\fP
Use \fIDIR\fP instead of the $HOME/.rawdog directory.
This option lets you have two or more \fBrawdog\fP setups with different
configurations and sets of feeds.
.TP
\fB\-N\fP, \fB\-\-no\-locking\fP
Do not lock the state file.
.IP ""
\fBrawdog\fP usually claims a lock on its state file, to stop more than
one instance from running at the same time.
Unfortunately, some filesystems don't support file locking; you can use
this option to disable locking entirely if you're in that situation.
.TP
\fB\-v\fP, \fB\-\-verbose\fP
Print more detailed information about what \fBrawdog\fP is doing to stderr
while it runs.
.TP
\fB\-V\fP \fIFILE\fP, \fB\-\-log\fP \fIFILE\fP
As with \fB\-V\fP, but write the information to \fIFILE\fP.
.TP
\fB\-W\fP, \fB\-\-no\-lock\-wait\fP
Exit silently if the state file is already locked.
.IP ""
If the state file is already locked, \fBrawdog\fP will normally wait
until it becomes available, then run.
However, if you're got a lot of feeds and a slow network connection, you
might prefer \fBrawdog\fP to just give up immediately if the previous
instance is still running.
.SS Actions
\fBrawdog\fP will perform these actions in the order given.
.TP
\fB\-a\fP \fIURL\fP, \fB\-\-add\fP \fIURL\fP
Try to find a feed associated with \fIURL\fP and add it to the config
file.
.IP ""
\fIURL\fP may be a feed itself, or it can be an HTML page that links to
a feed in any of a variety of ways.
\fBrawdog\fP uses heuristics to pick the best feed it can find, and will
complain if it can't find one.
.TP
\fB\-c\fP \fIFILE\fP, \fB\-\-config\fP \fIFILE\fP
Read \fIFILE\fP as an additional config file; any options provided in
\fIFILE\fP will override those set in the main config file (with the
exception of "feed", which is cumulative).
\fIFILE\fP may be an absolute path or a path relative to your .rawdog
directory.
.IP ""
Note that $HOME/.rawdog/config will still be read first even if you
specify this option.
\fB\-c\fP is mostly useful when you want to write the same set of feeds
out using two different sets of output options.
.TP
\fB\-f\fP \fIURL\fP, \fB\-\-update\-feed\fP \fIURL\fP
Update the feed pointed to by \fIURL\fP immediately, even if its period
hasn't elapsed since it was last updated.
This is useful when you're publishing a feed yourself, and want to test
whether it's working properly.
.TP
\fB\-l\fP, \fB\-\-list\fP
List brief information about each of the feeds that was known about at
the time of the last update.
.TP
\fB\-r\fP \fIURL\fP, \fB\-\-remove\fP \fIURL\fP
Remove feed \fIURL\fP from the config file.
.TP
\fB\-s\fP \fITEMPLATE\fP, \fB\-\-show\fP \fITEMPLATE\fP
Print one of the templates currently in use to stdout.
\fBTEMPLATE\fP may be \fBpage\fP, \fBitem\fP, \fBfeedlist\fP or
\fBfeeditem\fP.
This can be used as a starting point if you want to design your own
template for use with the corresponding \fBtemplate\fP option in the
config file.
.TP
\fB\-u\fP, \fB\-\-update\fP
Fetch data from the feeds and store it.
This could take some time if you've got lots of feeds.
.TP
\fB\-w\fP, \fB\-\-write\fP
Write out the HTML output file.
.SS Special Actions
If one of these options is specified, \fBrawdog\fP will perform only
that action, then exit.
.TP
\fB\-\-dump\fP \fIURL\fP
Show what \fBrawdog\fP's feed parser returns for \fIURL\fP.
This can be useful when trying to understand why \fBrawdog\fP doesn't
display a feed correctly.
.TP
\fB\-\-help\fP
Provide a brief summary of all the options \fBrawdog\fP supports.
.SH EXAMPLES
\fBrawdog\fP is typically invoked from
.BR cron (1).
The following
.BR crontab (5)
entry would fetch data from feeds and write it to HTML once an hour,
exiting if \fBrawdog\fP is already running:
.PP
.nf
.RS
0 * * * *  rawdog \-Wuw
.RE
.fi
.SH FILES
$HOME/.rawdog/config
.SH SEE ALSO
.BR cron (1).
.SH AUTHOR
\fBrawdog\fP was mostly written by Adam Sampson <ats@offog.org>, with
contributions and bug reports from many of \fBrawdog\fP's users.
See \fBrawdog\fP's NEWS file for a complete list of contributors.
.PP
This manual page was originally written by Decklin Foster
<decklin@red\-bean.com>, for the Debian project (but may be used by
others).
